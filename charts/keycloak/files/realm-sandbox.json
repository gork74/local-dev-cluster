{
  "id": "f2253f84-ef0b-461e-8065-707d3db50ac6",
  "realm": "sandbox",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "3e94212e-7678-4f5b-b515-0a4b600e9e24",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      },
      {
        "id": "d6208118-ba7e-4243-a201-4805584c3408",
        "name": "read-action",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      },
      {
        "id": "cd1ca33b-5123-48a8-9d54-eef9c4a01d48",
        "name": "default-roles-sandbox",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      },
      {
        "id": "cf72b1ec-67a4-4881-b0e6-626225cf0387",
        "name": "write-action",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      },
      {
        "id": "cb8c35f4-85b4-486d-9be4-6bfd95f2f14d",
        "name": "admin-action",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      },
      {
        "id": "30ee0cd7-f46d-43fe-90d3-8fc082a2f07a",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6",
        "attributes": {}
      }
    ],
    "client": {
      "sandbox-ui": [],
      "realm-management": [
        {
          "id": "69818d8c-8ace-4b92-8e2c-81fb69cd0bad",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "5d176d2b-07be-4204-b9bf-46716dc6468c",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "58685a8e-a485-4b9e-9c96-e172192578ad",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "ad3f8002-926a-4a85-a087-fa295f1c3c08",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "9b64b7af-cd63-4a82-97f5-4928cd683401",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "0f841068-76e4-4c88-b747-d425931c2f44",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "impersonation",
                "query-realms",
                "view-clients",
                "view-realm",
                "view-users",
                "manage-clients",
                "manage-identity-providers",
                "create-client",
                "view-authorization",
                "query-users",
                "view-events",
                "manage-realm",
                "manage-users",
                "query-groups",
                "query-clients",
                "view-identity-providers",
                "manage-authorization",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "3243e24c-8e86-4bb2-9b51-24fb7d648133",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "f6c56f04-bcc8-4bdc-a0db-1ae52d19613e",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "79704936-9590-4e64-8b4b-a13c26e32733",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "ff6b47a4-4259-4229-a2a1-e53dc66ba3bb",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "0ccbf481-198b-4ed7-91cf-11ca0d02674e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "d257043b-ae16-4a52-b789-870533abf4c0",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "f9e6d171-246f-442e-868a-8dbe5b2d2b75",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "d34578fd-8448-4677-92df-de5d2be2e13f",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "d7379374-63aa-49ca-b124-7bff8937e166",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "d95ce5e1-5ce9-4068-8b5a-2fc082a86780",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "39418a04-38de-4df5-b8b9-794f5cf5e5e6",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "5752c4b0-ca8b-453c-b2cb-6d57d091ddfa",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        },
        {
          "id": "a9f872d6-7be3-46f5-b211-49b8daf273c8",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "914ded32-4189-4e27-b502-9b4525703343",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "245e86b5-4db6-410d-8c0e-53ddcbe12dc3",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "4e10f3c3-bf35-43fa-bbff-7fce85c86e1e",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "7ae4a5a7-d6aa-46b4-adfb-ef876aa6c24c",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "db94408c-2bc3-4b4b-a6b4-25e37efe921b",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "7ced4ca2-fd9f-4eaa-8c1f-2339354f94c3",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "3659eaf4-e8a6-4926-892c-d0e278f48c54",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "f785830e-64fd-4c62-b6f3-99572e203604",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "e95fecf3-7678-4536-82dc-49769f5f8211",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "7a3c5eb2-a123-40d0-8724-b3af78666198",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        },
        {
          "id": "47ee0eb2-83dd-40c2-8ddb-63f98e5d8022",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "650f61b6-53ed-43d5-8345-73430269f86d",
      "name": "admins",
      "path": "/admins",
      "realmRoles": [
        "read-action",
        "default-roles-sandbox",
        "write-action",
        "admin-action"
      ]
    },
    {
      "id": "64c0f380-7860-4bc2-8553-1e03d59594ad",
      "name": "readers",
      "path": "/readers",
      "realmRoles": [
        "read-action"
      ]
    },
    {
      "id": "16d808dc-ab36-4d34-9b7a-fe1dee1c181e",
      "name": "writers",
      "path": "/writers",
      "realmRoles": [
        "read-action",
        "write-action"
      ]
    }
  ],
  "defaultRole": {
    "id": "cd1ca33b-5123-48a8-9d54-eef9c4a01d48",
    "name": "default-roles-sandbox",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "f2253f84-ef0b-461e-8065-707d3db50ac6"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "64a2842f-f133-45e5-b93a-2be224c94e1f",
      "createdTimestamp": 1708252800688,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Admin",
      "lastName": "User",
      "email": "admin@local.host",
      "credentials": [
        {
          "id": "cb61914a-14e6-4ef5-aa01-e7d113f70937",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1708267620487,
          "secretData": "{\"value\":\"hqjkLRNJDToeks7nDIPWdHV8quDfuCYIu7BHVmGM+YM=\",\"salt\":\"h9HRoCySbtq7D8mjg8RJ2Q==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-sandbox"
      ],
      "notBefore": 0,
      "groups": [
        "/admins"
      ]
    },
    {
      "id": "2ff59463-3a29-4c75-8f83-d4db9548ad97",
      "createdTimestamp": 1708252821948,
      "username": "reader",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Reader",
      "lastName": "User",
      "email": "reader@local.host",
      "credentials": [
        {
          "id": "2a1d8800-984f-455c-8a30-9bbb02559df8",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1708267609386,
          "secretData": "{\"value\":\"6uvLOQlKeI8B08Xotr/pdJaAEDaoEU6eQnTPoagiFAE=\",\"salt\":\"/8aX5o7WktkKK+1/EHZwPQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-sandbox"
      ],
      "notBefore": 0,
      "groups": [
        "/readers"
      ]
    },
    {
      "id": "2352139b-1261-4c5d-ad0a-465d97895c49",
      "createdTimestamp": 1708252845475,
      "username": "writer",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Writer",
      "lastName": "User",
      "email": "writer@local.host",
      "credentials": [
        {
          "id": "cab2d8b0-5632-4908-a283-e2bcc9bdc697",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1708267593753,
          "secretData": "{\"value\":\"8UsoqIa6W8dhBylwE01iK6rE9I7AASU3H1WBNn9OhKM=\",\"salt\":\"/ktcX9mcyl+gEFV/0ZVarA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-sandbox"
      ],
      "notBefore": 0,
      "groups": [
        "/writers"
      ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "32ded2aa-d13f-4f14-97dc-59f5e594e309",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/sandbox/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/sandbox/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "addb2d4f-9416-4b9e-9cff-13f1424e0509",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/sandbox/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/sandbox/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "bb3cd767-d470-4647-bb46-077897b985d2",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "55538547-f83e-498e-aedb-52f8a27735b0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4e10f3c3-bf35-43fa-bbff-7fce85c86e1e",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "914ded32-4189-4e27-b502-9b4525703343",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0fd87058-72c6-4dab-bd8d-2c135ef0305b",
      "clientId": "sandbox-ui",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "13c709a0-5bb3-4c8b-bcfe-73cd0b71430d",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/sandbox/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/sandbox/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "5782ea94-bdd6-4c16-8dd9-afa0afa10767",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "d00648ec-88c2-4905-99bd-4f27069b1c92",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "d45584e3-436a-4647-9c1b-302a4a48d74d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "85ced5fb-ad53-4bc4-a194-21b6db838431",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "29805a1a-acfc-4c9b-989c-d92c95a5eaac",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "add73638-6518-42d5-a52d-4f612481bbde",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "bc23d2cb-7eb1-4eb3-9d6f-6f299d00fdbe",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "6a290640-c07a-4219-a442-50ff2183cdc5",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "02c8dbaf-04c2-41e9-b311-46b7e4726b55",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "d4317dc3-4909-4410-8778-aec4e3714318",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e8b33ddc-88f6-456f-9b57-298666ab766b",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0d365b0c-6f91-49be-9334-f92b309c886d",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cdb6c3cf-3025-452e-b4ad-70621a832613",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "f85eb646-5e51-4f63-b840-c096018f12c9",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "1f559c02-27f5-4a8e-be60-ee5400da389c",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c3e357bb-1e13-40cf-bcdc-20cc8c57c9be",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "577b6c16-cc69-4cc1-8d44-4e0e53250724",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2a420f0c-57db-4a75-9690-776c0a77ec49",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c8aeef94-ef2d-4e8f-886f-ac756be65ebb",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "87448e20-aa35-4b36-bfbe-5674cdb0a67b",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3087ea3a-4d4b-41d2-a051-d6bea11dd4b9",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "fca25471-9f21-4bd4-baae-4af6315a10fe",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3778a0f-b0b2-4dab-a864-9e1852657265",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7cb58299-6bb2-4ae5-90e6-384b26df5f97",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f4953c12-2c48-49bb-b5fb-3361f5255316",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f88bdc35-7034-42b4-8dcf-be65cda71cc5",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d841594-3dbc-4871-9063-5b28243364a4",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "050d1a30-ed2a-4033-a6c0-f8429d410cf6",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ed161f3c-5822-4b4a-bff3-6e730caf7734",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "156cdce1-9dba-40ca-a203-147288de9f54",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9e93592e-0d67-496e-851e-09f8aa77dace",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "14a939c4-d3b3-4f27-877b-ede328103f05",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "81837386-c5c7-42ed-ae2e-44ae8eac99f2",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d6cc9ea5-d6db-40ca-8f7a-de38adf153c8",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6e558be3-60c7-46f7-ae49-21dbcb4ae9af",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d5e16299-9920-4468-a11f-28fb26c8b3c5",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0999dfa3-5dc6-4eb8-84b7-f03ba68a3af2",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a3fba4b-9e79-4c36-98df-2fcf8f107291",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a18e9d0c-f79b-49be-8d4b-6826d3ed9046",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "a55ae7ab-4c10-4840-9faa-dd60693d4a75",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8d04ae32-acca-4704-a795-2172366665b3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "d846d46a-fabd-4e47-8b7e-242f617cded8",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "2773a0e5-a324-414a-b1b7-4f0a85309c17",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c7203105-d3dd-4b6f-b6ef-2758a241d40c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "208370b7-beb1-4985-baf6-59e35fb20ac0",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "787bc3e3-d22b-4b24-87d4-8066f43e3d11",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "81030b96-63b2-494c-9492-9646129e7850",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "8c6b91ae-bcae-455c-8bf7-cd30edc993fe"
          ],
          "secret": [
            "HO4UuOb7gQ3ygd8AJKVRPg"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "de9b99a1-4f73-4db9-aafb-88354a78e4c2",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAu/lQ5vcS12zcbQHqnIZdM8KhW4vBtJs241A4kq4Xtt9yf2cb0zcGD0LQ1n7bRMK+vB4lksZ4aDqQ87sBrGUDZUfP/Ud/1dDMBp3zckX2opC0vBIdXvsk5RoPGBUcLCrAQDqld1QtcLoLXES+/txJKBtmhoKIcd+9lviM0novFekBiwn7yjnr0yO4MRblsD945l4Eki91cb/P58bGOD/ap0KT5yDhtL+p3+Sy0xS6BNRplUW87vUv5D39WihvSdJ+5HKHSrJ3zttIBlwFKWpmvl0WwalwszLFRag5PvpAVHr6JcgtNdRKcWQSo4pCqDqnA4Ll5rjO65FQTNn0gZQ4tQIDAQABAoIBAA0yGAR+vRXeZdhJKtJzeZYpSEaIQxWN/TEWmpdsHUIQjEB2rooJ8iT0HdD7oCJC7DzXKPAVerJmb3KMuDYFSVMSKCmxm+nDT0Sk+0gUXUIAQo/JUxfYguM1DHDhBSnx6QPD74W2+mb6yH1hCL9qG2tIsSPUL1vpxwISz1/0hTBWcj16KlYmljMqBMCHe7iASIfu4I8se2nKakBmzsuowVPxvcKQv9+fWvt1zq9ZLpPfErd0PbUG1FCwGhBZNJYTK7kId39ofO94R32t2goKP9dIdNGCSbHzr1r63jflZvqlaVxms9LoC2cE+s9JiAC2Jw/QR/mDeMQbMQEauM5VsWkCgYEA6Rm9RaW8dBV0gf1l8uhNViG5lG5rqP+3n3JShCQyuwECTzGE9CdD5I369PQG0cQCMtwwP5VT186mZiEscv3c4eKwmEz0qBRzBUuu09+tbAwuUzrdtiDKpTbvbI0uOPGLyiSvHdAZch1xZpgDIzJmeiGXlYMbOq7NP+DHXcGVMi8CgYEAznCu/UZ0sYztkyvZ0HfRbxAN8vAINU0FCKV4wRs8Xb8VQN8XW/eMBbXhUBOp+Xs61D2crWSnr+FpcD8lVS6ORmBODZC3hejIsa+Vk/g42YVkI6520rVGQgmglVd9OaYhc8oLNfZDc+MBmBwNvzg0Hk49O+LsSAdGlJ247sHcPlsCgYEA1rOKjjgV2KZaZdDMsmwdr5Popzr9lu/SZd6a+nOM9on7Yo4t8+SmuEG+QRjznwp3K/l7x1T3oPMKeU9c7Z2+caCnH+DiCF6tgtcu9KA10Ct4D9lMlZCmln5/EPEI/hIdu9cGJOOkTGOqK+EgIq8tjJicUm4sCmUvUALuHwFLNqkCgYAheL/GrR/KkfELRbbhSCwa991rIGQUUFKankm/9ayJ/qtxgzqEXNTFMEJB+445tzNIqly2+HT/3Wp9Gp/w+cVzv7WoGWjIO4Ae3zs/bKW7Dxe3eVgmveGQX4M7852INVmDLqU2sKErLwlZImNQN8qrh0ACb76jxxo4ioIrpB8TtQKBgQDbpmpd9CkuwJsc35dq1N14D8sLDvLo7uIme9jZ0Nsvt2u135P/x4uBoB5qhmHd3Azzb8My5ZD1lyvcQ2qxv904//Ielr9Y5zW+sS/oayFmjSHzV+rdLc+f3xrNsxJIp3kA/gbTg9b9HjCf+YRkEyXbqZcKelVZkyjcemlDmjorYw=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGNu8rb7jANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdzYW5kYm94MB4XDTI0MDIxODEwMzU1MFoXDTM0MDIxODEwMzczMFowEjEQMA4GA1UEAwwHc2FuZGJveDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALv5UOb3Etds3G0B6pyGXTPCoVuLwbSbNuNQOJKuF7bfcn9nG9M3Bg9C0NZ+20TCvrweJZLGeGg6kPO7AaxlA2VHz/1Hf9XQzAad83JF9qKQtLwSHV77JOUaDxgVHCwqwEA6pXdULXC6C1xEvv7cSSgbZoaCiHHfvZb4jNJ6LxXpAYsJ+8o569MjuDEW5bA/eOZeBJIvdXG/z+fGxjg/2qdCk+cg4bS/qd/kstMUugTUaZVFvO71L+Q9/Voob0nSfuRyh0qyd87bSAZcBSlqZr5dFsGpcLMyxUWoOT76QFR6+iXILTXUSnFkEqOKQqg6pwOC5ea4zuuRUEzZ9IGUOLUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAJN0ywVzXbyisBpm4+1uXAtLEiY2WMBvwItoktKYIIBAe02oELYCm/pIfTA0JJ5D9juQZweJ0y26+OiXOeXdvixCI3X45FFOGKDeoLAIrIAHu9FxiCrmhMrZ/McBNk/Baws+s4z+fmzNXeE4BiVGILMDisAP4LDCSLHe864bfmZbIrOz2WllnTKvY+LzI6mpWp1kVppSlhtiqg17H7KHOiX9PWTijvNTd9uQ2bseTGynkZUjO3qcb4Von5qpeJ6Rry1sAUvP3EWa4QB0C2g4dW2CoGa1GT62k9rIiPLm0ujwRY7lYwtCqLkrOs8cg9wavr5Xae7w8B/yOOVgIhchQUA=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "b00495c3-290b-46ac-a90e-085fc3597ab1",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEAqfgtnx6ic94aIHlfE9C+O17Ihi77qgpZegiNy6Fipza9CqBot+mL/USITOzKEOJh0zrc6KxfiZcnhjMlgzUi9uyQ3Y16lPGIf8vZxFwgDqOT6YshMbf8eCM46bFRfMjsJu2DVmU5XO3F49QqeEEFtWLaQzTOSo+DLkPh3B8+3eWtGcJSG1e+E68JCrLoyErPsGqrN+1PVgOscs5OVGg84yMFu+pknVXXQqLwDdF1gZpCM4Dhc5AeESbicopTnB3KokC0jaN8sSsYOvcWsuPqZVUavf9LksOobWUJtzUUGaGyccKapiTbgMS7or2wFbW5SVexfEwe9A8MPd9Nklu87wIDAQABAoIBABKnq5IwUZI4CVQRHi9VlNt9TrLziymhkyqCr9VutB44Ms1sx7GPz46PrAoNXyw1PJlrd32OFbpLPcpL6M0a0uiZFFlMwuyACgREwnT7y4TvzTcvzwfe8rXY39E+Zfw1LT4kiWq9F2usqTCVQ8gJEvBSljQUIqQqVjKIvsxjHYpLEi2gw+MIHT2V/M0JCGC0TSODfk9zT3ovrVUnqFeG8UzCM7rp4DCvPCtiIO4KMMajHTlZnoysdw1FeHCy8oUgR1dkS+zE3n5ZH5BidZMvyr0I8i9agDlPEYatrmXfFdfgnSrwTM48J6+OsJMVCv0TfgFYBUuHI8GdeJQ5VM4t24kCgYEA3u/KascsHw3AjcvXW7fYS70QQ/dSD7TtXrBwEBcH7mcbXOOR2RthBD+uMtrpMX5AB8LfMCIyjyrPbFWO2HwMp4kenm0byx3THV2ks0T/G5hcW5TFpuDqDvt81wcHALeZpCiXO61Em6T6Cj5/3gBLN6w0fLDtK7PQ+FDFp6AQT+UCgYEAwy1jFTY0FPrIoqSdpSHu+tQMASVt1oynIyDTI5ya9x8M8fFzcon8DeQo8EziQeteXJcJ+bKiAgH6AwtQ2pxtFd7QUxc2d7K/cZNCBLNshAgrWR0HZ7MxKDTBeSMVWcgWd9y1pdlF+AxAkBZZJr+XT7jlnM4PboIlui28L/uGREMCgYEAhmd82ok/sW0iFJq7OKGK9oaCguddgviqTvcCaMDp2DIzTfopGQInqF8YD7Lo+hzKT6ON2UAUyTmfGgou95c6Lds+KXdQVVGi0MZ/IFFNl/5wWApGa0iX8/ZsmlqzPxxxtYV/P8xDW67HzFtHzbjRoDvi3PXx1vIu3zYbI+cdTn0CgYAZuyIU6dBz85v/1TPzUUXwS4RJomWYo3Jlby5mw36qla1fODXAI/DW4/2BsKEjj6QhEMh/4sz49sm/HP7L01OOTpGoYqcLoMUcdA2AESd9QJZ2aR1Qzo7sfggDsFxgOcC8jJxmAP74dKUOWePm99s652VeBsyCBSZ0JRNqP/6zgQJ/XvDz1qnETVnZHLL024T5UDCCS58O3CfAb9Vt3UpYudoapAqM4hi+7v0Gwi+Xtd/BIIy5waoe8494heRlCv72YTpFKLo2jF0YR40gK6cwSp4mIOzXDmduxpq/svkeNN7vUqZIld9l2T+UZocW1NrPXUlVPGO9uigzntMOdxaUUQ=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGNu8rcODANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdzYW5kYm94MB4XDTI0MDIxODEwMzU1MFoXDTM0MDIxODEwMzczMFowEjEQMA4GA1UEAwwHc2FuZGJveDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKn4LZ8eonPeGiB5XxPQvjteyIYu+6oKWXoIjcuhYqc2vQqgaLfpi/1EiEzsyhDiYdM63OisX4mXJ4YzJYM1IvbskN2NepTxiH/L2cRcIA6jk+mLITG3/HgjOOmxUXzI7Cbtg1ZlOVztxePUKnhBBbVi2kM0zkqPgy5D4dwfPt3lrRnCUhtXvhOvCQqy6MhKz7BqqzftT1YDrHLOTlRoPOMjBbvqZJ1V10Ki8A3RdYGaQjOA4XOQHhEm4nKKU5wdyqJAtI2jfLErGDr3FrLj6mVVGr3/S5LDqG1lCbc1FBmhsnHCmqYk24DEu6K9sBW1uUlXsXxMHvQPDD3fTZJbvO8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAS98u850Jc0P1tocLubh1lxrclmkJ/rUR6CCynuQqVL5A4b3tLlIx4QgWi46jyHQD+tWSzBcJfDut8VpvEZMKsr5uq83oQQHO4damwM+ZwfIJQi5/Z+Cs0sHhUNzZtk+D32i0J2fTVDTBtYoF7Q0hVdU00u9WBwmoo/ZD8JQRhQMAWm2Aup6A+n+OZQtnDfnX8qKcRrEksEB4BrEVJ4cbRyOIMHQh+hCzKTMFourtVAVJ2JYeLOHobQ5bzLyg2i+sdwQZL3AzPMqYbtHthIUqBNfAdhGqakCZAfUCzj4DIhjSC3ivc8ecGH4lt+03R06yF5KQnh5CyN27eCE6rwLF5g=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "592e3153-a4dd-4d09-8743-136aa0d086f8",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "86bf8295-9945-468c-a63a-3c424bed5892"
          ],
          "secret": [
            "fPBOQv-yewwKAffa7Tzu-6UEpQjD1kZHk0dZK3IT2HSN47-KytPy4jiuUPzOKpehewPkqC04Zkvnf8nMOtXuhg"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "bdb48bde-1a34-4ec6-bb30-d0dbe2b3b0b6",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67d10cb0-df5c-4980-a1ea-874618fdacba",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "907f8222-230e-413a-9ca0-3d6fc584e9b6",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f3c81794-f409-4a55-9280-bc71a250466a",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e3610ac4-4373-4131-8667-9ea39eddbdba",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "02463d12-25e3-453a-a71b-e99ba41e972b",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "42859275-1f2f-48d2-885d-bdad91abb43e",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c35d1c85-fd4f-40c9-960a-40a2aa2642e1",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a7238a5f-cd6c-4e41-ad99-b9aea693ddd2",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5641688f-e4e1-45f3-9d4a-70a91f6c254a",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b5abdcdf-0a17-4ea3-ba53-7fd807a93a53",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e0b52e55-7d92-4d93-a10f-be1daddab587",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "082a22f8-44f6-4f2c-8050-719fd52a840d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c9ebd3a0-8dd9-4bc6-90f7-fe89602fdcdc",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24f62eb6-6dfc-4bb7-80e7-0d6fc6941ca7",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a6afd4f7-ebdb-4532-b0ad-9eb8e32d5e61",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "446f4e32-6208-4e55-b36e-142a4a6684f1",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "587b588c-903d-4b21-9505-194908954fb1",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "97805565-c61d-419c-87a6-ee5330718c99",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "752b574f-f44d-4dc9-af51-5999cde73aae",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "23.0.4",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
